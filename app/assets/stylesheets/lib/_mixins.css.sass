=image-url-2x($image, $image2x: false)
  background-image: image-url($image)
  @if $image2x
    @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)
      /* on retina, use image that's scaled by 2
      background-image: image-url($image2x)
  background-size: image-width($image) image-height($image)

/*                                      $spritemap: sprite-map("sprites/*.png");
 * $spritemap2x: sprite-map("sprites2x/*.png");

=background-image-sprite($spriteimage)
  background: sprite($spritemap, $spriteimage)
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)
    /* on retina, use image that's scaled by 2
    $pos: sprite-position($spritemap, $spriteimage)
    background: sprite-url($spritemap2x) $pos / ceil(image-width(sprite-path($spritemap2x)) / 2) ceil(image-height(sprite-path($spritemap2x)) / 2)

=background-image-with-retina($image, $retinaimage)
  background-image: image_url($image)
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)
    /* on retina, use image that's scaled by 2
    background-image: image_url($retinaimage)
    background-size: image-width($image) image-height($image)

=background-image-with-retina-inline($image, $retinaimage)
  background-image: inline-image($image)
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)
    /* on retina, use image that's scaled by 2
    background-image: inline-image($retinaimage)
    background-size: image-width($image) image-height($image)
